<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.vuforia.VuforiaSamples"
    android:versionCode="750"
    android:versionName="7.5" >

    <uses-sdk
        android:minSdkVersion="15"
        android:targetSdkVersion="23" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <!--
         The application requires a camera.

         NOTE: Any application that requests the CAMERA permission but does not
         declare any camera features with the <uses-feature> element will be
         assumed to use all camera features (auto-focus and flash). Thus, the
         application will not be compatible with devices that do not support
         all camera features. Please use <uses-feature> to declare only the
         camera features that your application does need. For instance, if you
         request the CAMERA permission, but you do not need auto-focus or
         flash, then declare only the android.hardware.camera feature. The
         other camera features that you do not request will no longer be
         assumed as required.
    -->
    <uses-feature android:name="android.hardware.camera" />

<!--         Add this permission to get access to the camera. -->
    <uses-permission android:name="android.permission.CAMERA" />

<!--         Add this permission to allow opening network sockets. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!--
        Add this permission to check which network access properties (e.g.
        active type: 3G/WiFi).
    -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!-- Optional permission for Analytics to run. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Required by older versions of Google Play services to create GCM registration tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.vuforia.VuforiaSamples.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.vuforia.VuforiaSamples.permission.C2D_MESSAGE" />
    <!--
      NOTE: The setting 'android:launchMode="singleTask"' makes sure
      that the activity can begin only one task and the device can hold only
      one instance of the activity at a time. However, it allows other
      activities to be part of its task (unlike the 'singleInstance' mode).
      It's at the root of the activity stack, but other activities (necessarily
      "standard" and "singleTop" activities) can be launched into the same task.
      If this attribute is not set, the default value 'standard' is used, which
      would allow the activity to be launched multiple times.
    -->
    <application
        android:allowBackup="true"
        android:debuggable="true"
        android:description="@string/app_description"
        android:icon="@drawable/icon"
        android:label="@string/app_name"
        android:launchMode="singleTask"
        android:supportsRtl="true"
        android:theme="@style/SampleAppsTheme" >

        <!-- The following must be present to facilitate use of ARCore, if available -->
        <meta-data
            android:name="com.google.ar.core"
            android:value="optional" />

        <!--
          NOTE: The values in 'android:configChanges' ensure that Android will 
          not destroy and re-create the activity when the user flips the 
          keyboard, changes the orientation of the device, or the actual or 
          physical screen resolution changes, but calls the Activity's 
          onConfigurationChanged() function instead.

          NOTE 2: In order to prevent automatic reactions to orientation
          changes in addition to setting proper values for
          'android:configChanges', you also must explicitly specify the screen
          orientation used by the application, either by setting the attribute
          'android:screenOrientation' or in code by calling
          Activity.setRequestedOrientation().
        -->
        <!-- Splash Screen Activity -->
        <activity
            android:name="com.vuforia.VuforiaSamples.ui.ActivityList.ActivitySplashScreen"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:noHistory="true"
            android:screenOrientation="portrait" >
        </activity>
        <activity
            android:name="com.vuforia.VuforiaSamples.ui.ActivityList.ActivityLauncher"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:screenOrientation="portrait" >
        </activity>
        <activity
            android:name="com.vuforia.VuforiaSamples.app.VuMark.VuMark"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize"
            android:launchMode="singleTask"
            android:theme="@style/SampleAppsTheme" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- This activity is critical for installing ARCore when it is not already present. -->
        <activity
            android:name="com.google.ar.core.InstallActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:excludeFromRecents="true"
            android:exported="false"
            android:launchMode="singleTop"
            android:theme="@android:style/Theme.Material.Light.Dialog.Alert" /> <!-- The minimal version code of ARCore APK required for an app using this SDK. -->
        <meta-data
            android:name="com.google.ar.core.min_apk_version"
            android:value="180815000" />

        <receiver android:name="com.google.android.gms.cast.framework.media.MediaIntentReceiver" />

        <service android:name="com.google.android.gms.cast.framework.media.MediaNotificationService" />
        <service android:name="com.google.android.gms.cast.framework.ReconnectionService" />

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.1.0" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent" />

        <receiver
            android:name="com.google.android.gms.analytics.AnalyticsReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>

        <service
            android:name="com.google.android.gms.analytics.AnalyticsService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.analytics.AnalyticsJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity
            android:name="com.google.android.gms.appinvite.PreviewActivity"
            android:exported="true"
            android:theme="@style/Theme.AppInvite.Preview" >
            <intent-filter>
                <action android:name="com.google.android.gms.appinvite.ACTION_PREVIEW" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
            Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />

        <activity
            android:name="com.google.firebase.auth.internal.FederatedSignInActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleInstance"
            android:permission="com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
             FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.android.gms.tagmanager.TagManagerService"
            android:enabled="true"
            android:exported="false" />

        <activity
            android:name="com.google.android.gms.tagmanager.TagManagerPreviewActivity"
            android:exported="true"
            android:noHistory="true" > <!-- optional, removes the previewActivity from the activity stack. -->
            <intent-filter>
                <data android:scheme="tagmanager.c.com.vuforia.VuforiaSamples" />

                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
            </intent-filter>
        </activity>

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.vuforia.VuforiaSamples" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.vuforia.VuforiaSamples.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
    </application>

</manifest>